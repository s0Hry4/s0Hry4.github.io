<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Aws on pulog</title>
    <link>https://s0Hry4.github.io/tags/aws/</link>
    <description>Recent content in Aws on pulog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Sun, 03 Mar 2019 17:31:05 +0900</lastBuildDate>
    
	<atom:link href="https://s0Hry4.github.io/tags/aws/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AWS EC2にLet&#39;s Encryptを導入してHTTPS化する</title>
      <link>https://s0Hry4.github.io/posts/2019/02/httpsportfolio/</link>
      <pubDate>Sun, 03 Mar 2019 17:31:05 +0900</pubDate>
      
      <guid>https://s0Hry4.github.io/posts/2019/02/httpsportfolio/</guid>
      <description>概要 EC2で運用しているポートフォリオサイトがこれまでHTTPだったのでセキュリティの改善としてHTTPS化しました。オンライン決済や重要情報を扱ってるサイトではないので必須な対応ではないですが、SEOや信頼性を意識して実施することにしました。
Let&amp;rsquo;s Encryptとは SSL証明書を発行してくれるサービスは沢山あります。今回は無料で発行できる「Let&amp;rsquo;s Encrypt」を利用します。AWSではコマンドベースで発行から設定までできるので小難しい画面操作がなく簡単に導入できました。
https://letsencrypt.org/
導入 環境 Amazon Linux AMI release 2018.03
Apache 2.4.37
EC2のセキュリティグループを設定する AWSコンソール画面にアクセスしEC2の設定を行います。セキュリティグループのインバウンド設定でHTTP(80)に加えてHTTPS(443)も許可(0.0.0.0/0)します。
 certbotをインストールする certbotとはLet’s Encryptの自動化サービスです。 EC2にSSHログインし以下のコマンドを実行してインストールします。
// sudo権限 sudo su // culrでcertbotをインストール curl https://dl.eff.org/certbot-auto -o /usr/bin/certbot-auto // パーミションを700に変更 chmod 700 /usr/bin/certbot-auto  SSL証明書を発行する 以下のコマンドを実行して証明書を発行します。各パラメータは自身の環境に合わせて変更します。
// 証明書生成コマンド certbot-auto certonly --webroot -w [ドキュメントルート] -d [ドメイン名] --email [メールアドレス] -n --agree-tos --debug  -w&amp;hellip;ドキュメントルート
-d&amp;hellip;対象ドメイン
--email&amp;hellip;連絡用メールアドレス
-n&amp;hellip;対話の入力をスキップ
--agree-tos&amp;hellip;利用規約に同意する
--debug&amp;hellip;AWSの場合は記述
AWSでは&amp;ndash;debugオプションがないとエラーになるようです。以下はエラーになった時の表示。AWSではまだ正式なサポートではなく実験段階のため&amp;ndash;debugオプションをつけてくださいとのこと。
FATAL: Amazon Linux support is very experimental at present.</description>
    </item>
    
  </channel>
</rss>